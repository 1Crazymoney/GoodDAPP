# This is a basic workflow to help you get started with Actions

name: Android release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master, staging, next, 3493-code-push]
  pull_request:
    branches: [master]
    types:
      - closed

  workflow_dispatch:
    inputs:
      release:
        description: 'release type'
        required: true
        default: ''
        type: choice
        options:
          - dev: 'master'
          - qa: 'staging'
          - prod: 'next'

jobs:
  codepush:
    name: Hot Code Push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: GoodDollar/GoodDAPP/.github/workflows/utils/android.yml@3493-code-push
      - name: Code push release
        env:
          BUILD_NUMBER: ${{ github.run_number }}
          CODE_PUSH_DEPLOYMENT_KEY: ${{ env.APPCENTER_CODEPUSH_TOKEN }}
        run: |
          echo "Code push release target version "${BUILD_NUMBER}""
          yarn lingui:compile
          npx appcenter codepush release-react ${{ env.APPCENTER_NAME }} android --token "${{ env.APPCENTER_TOKEN }}""

  # This workflow contains a single job called "build"
  build:
    name: Build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Build runs if triggered by merging pull request to master or by push with 'release <target_branch>' flag and without skipping CI :
    if: |
      ${{
        github.event_name == 'workflow_dispatch' ||
        (endsWith(github.ref, '/master') && github.event.pull_request.merged) ||
        (endsWith(github.ref, '/staging') && contains(github.event.head_commit.message, 'release qa')) ||
        (endsWith(github.ref, '/next') && contains(github.event.head_commit.message, 'release prod'))
      }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: fix max_user_watches
        run: |
          echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - uses: ./.github/workflows/utils/android.yml
        with:
          target_branch: ${{ github.event.inputs.release }}
      - name: Setup google services file
        run: echo "${{ secrets.ANDROID_GOOGLE_SERVICES}}" | base64 --decode > ./android/app/google-services.json
      - name: Set release keystore
        run: |
          echo "${{ secrets.RELEASE_ANDROID_KEYSTORE }}" > release.keystore.asc
          gpg -d --passphrase "${{ secrets.RELEASE_ANDROID_PASSPHRASE }}" --batch release.keystore.asc > android/app/release.keystore
      - name: Build Android Release
        env:
          RELEASE_ANDROID_PASSPHRASE: ${{ secrets.RELEASE_ANDROID_PASSPHRASE }}
          ENVFILE: '.env.${{ env.ENV }}'
          BUILD_NUMBER: ${{ github.run_number }}
          CODE_PUSH_DEPLOYMENT_KEY: ${{ env.APPCENTER_CODEPUSH_TOKEN }}
        run: |
          BUILD_VERSION=`node -pe "require('./package.json')['version']"`
          echo "Creating release using env: ${ENVFILE} build:${BUILD_NUMBER} version:${BUILD_VERSION} ${GITHUB_RUN_NUMBER} ${{ github.run_number }}"
          yarn lingui:compile
          cd android && ./gradlew bundleRelease
      - name: Build Universal APK
        uses: skywall/universal-apk-builder@v1.0.1
        with:
          aab_path: ${{ env.ANDROID_BUNDLE_PATH }}
          keystore_path: './android/app/release.keystore'
          keystore_password: ${{secrets.RELEASE_ANDROID_PASSPHRASE}}
          keystore_alias: 'release-alias'
          keystore_alias_password: ${{secrets.RELEASE_ANDROID_PASSPHRASE}}
      - name: Deploy to App Center
        run: |
          echo "deploying to ${{ env.APPCENTER_NAME }} ${{ env.INPUT_APK_PATH }}"
          yarn add appcenter-cli@^2.*
          npx appcenter distribute release --token "${{ env.APPCENTER_TOKEN }}" --app "${{ env.APPCENTER_NAME }}" --group "Collaborators" --file "${{ env.UNIVERSAL_APK_PATH }}" --release-notes "$(git log -1 --pretty=format:'%h %s')" --debug
      - name: Distribute to stores - PROD ONLY
        if: ${{ env.ENV == 'prod' }}
        run: |
          npx appcenter distribute stores publish --token "${{ env.APPCENTER_TOKEN }}" --app "${{ env.APPCENTER_NAME }}" --store "${{ env.APPCENTER_STORE }}" --file "${{ env.ANDROID_BUNDLE_PATH }}" --release-notes "$(git log -1 --pretty=format:'%h %s')"
